/*********************************************************************************************************
// NAME:        ProblemGenerator.cpp
// AUTHOR:      Chang XU, Zhigang WANG
// DIRECTOR:	Dr. ShuaiCheng Li
// DATE:        4 Feb 2013
// PRODUCT:     Problem Class version 1.0
//
// DESCRIPTION: This is used to preload all txt problems and then choose the specific 
//              type of generator to generate the exe file
// 
// CHANGES:		
// 
// NOTES:
//
// COPYRIGHT:  
//
********************************************************************************************************/
#include <iostream>
#include <string>
//#include <windows.h>
#include <fstream>
#include "stdio.h"
#include "stdlib.h"
#include "GeneralProblem.h"

using namespace std;
int main(int argc,char *argv[]) {
	//get the file name
	//cout << "Please input the problem name" << endl;
	if(argc < 2) {
		cout << ("You must provide at least one argument\n");
		return 1;
	}
	cout << argv[1];
	string name="SAT/Reading/ReadingSample";
	//string name="SAT/MultipleChoice/MultipleChoice1";
	//string name="MultipleChoice1";
	//cin >> name;
	
	GeneralProblem p;
	//parse the text file and convert it into cpp file
	p.parse(name);
	p.generateProblem();
	 
	
	
	/****************************************************************
     use the system in c++, call cl.exe to compile and run the exe
     program have generated by cpp file just now
     ****************************************************************/
//	int i;
//	 
//	string cmd="cl ../../cProblem/"+name+".cpp"+
//				" -Fe../../cProblem/"+name+".exe"+
//				" -Fo../../cProblem/"+name+".obj "+
//				"-link ../../cProblem/"+name+".obj"+" D:/Users/Wang/Documents/visualstudio2010/Projects/ProblemGenerator/ProblemGenerator/RandomPackage.obj";
//	i=system (cmd.c_str());
//	if(i==0)
//		cout<< "Successfully compiled!"<<endl;
//	
//	
//	//run the compiled exe file
//	cmd="../../cProblem/"+name+".exe";	
//	WinExec(cmd.c_str(),1);
//
//
//	system("pause");
	return 0;
}
